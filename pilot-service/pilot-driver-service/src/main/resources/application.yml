server:
  port: ${PORT:8081}

# Remove this configuration if want to run with in memory database called H2.
spring:
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        jdbc:
          lob.non_contextual_creation: true

# Postgres connectivity details here      
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:localhost}/${POSTGRES_DATABASE:postgres}
    username: ${POSTGRES_USER:anirbanchakraborty}
    password: ${POSTGRES_PASSWORD:postgres123}
    driver-class-name: org.postgresql.Driver
    hikari:
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000

instrumentation:
  filter:
    enabled: true
  aspect:
    enabled: true
    ignore-duration-in-millis: 20
  handlers:
    log:
      layers:
      - FILTER
      - CONTROLLER
      - SERVICE
      - REPOSITORY
      event-names: all
      ignore-parameters: false
      ignore-outcome: true
      ignore-exception-stack: false
      limited: false
    new-relic:
      event-names: none
    aws-sns:
      event-names: sourcing

# Rest consumer calls
rest:
  consumers:
    - name: vehicle-preference
      url: http://${VEHICLE_SERVICE_HOST}:8080/pilot-vehicle-service/0.0/vehicle/preference
      secured: false
      contentType: application/json
      responseType: me.anichakra.poc.pilot.driver.domain.Vehicle
      method: POST
      headers:
        clientId: abc
        x-header: xyz
      properties:
        cost: 1000
        color: red
  